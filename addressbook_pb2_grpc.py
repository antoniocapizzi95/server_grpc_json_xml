# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import addressbook_pb2 as addressbook__pb2


class RPCServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPersonByPhoneNumber = channel.unary_unary(
                '/addressbook.RPCService/GetPersonByPhoneNumber',
                request_serializer=addressbook__pb2.Message.SerializeToString,
                response_deserializer=addressbook__pb2.Message.FromString,
                )
        self.EditPeople = channel.stream_unary(
                '/addressbook.RPCService/EditPeople',
                request_serializer=addressbook__pb2.Message.SerializeToString,
                response_deserializer=addressbook__pb2.Message.FromString,
                )
        self.ListPeopleByPhoneType = channel.unary_stream(
                '/addressbook.RPCService/ListPeopleByPhoneType',
                request_serializer=addressbook__pb2.Message.SerializeToString,
                response_deserializer=addressbook__pb2.Message.FromString,
                )
        self.GetPeopleById = channel.stream_stream(
                '/addressbook.RPCService/GetPeopleById',
                request_serializer=addressbook__pb2.Message.SerializeToString,
                response_deserializer=addressbook__pb2.Message.FromString,
                )


class RPCServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetPersonByPhoneNumber(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditPeople(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPeopleByPhoneType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPeopleById(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RPCServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetPersonByPhoneNumber': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPersonByPhoneNumber,
                    request_deserializer=addressbook__pb2.Message.FromString,
                    response_serializer=addressbook__pb2.Message.SerializeToString,
            ),
            'EditPeople': grpc.stream_unary_rpc_method_handler(
                    servicer.EditPeople,
                    request_deserializer=addressbook__pb2.Message.FromString,
                    response_serializer=addressbook__pb2.Message.SerializeToString,
            ),
            'ListPeopleByPhoneType': grpc.unary_stream_rpc_method_handler(
                    servicer.ListPeopleByPhoneType,
                    request_deserializer=addressbook__pb2.Message.FromString,
                    response_serializer=addressbook__pb2.Message.SerializeToString,
            ),
            'GetPeopleById': grpc.stream_stream_rpc_method_handler(
                    servicer.GetPeopleById,
                    request_deserializer=addressbook__pb2.Message.FromString,
                    response_serializer=addressbook__pb2.Message.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'addressbook.RPCService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RPCService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetPersonByPhoneNumber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/addressbook.RPCService/GetPersonByPhoneNumber',
            addressbook__pb2.Message.SerializeToString,
            addressbook__pb2.Message.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EditPeople(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/addressbook.RPCService/EditPeople',
            addressbook__pb2.Message.SerializeToString,
            addressbook__pb2.Message.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPeopleByPhoneType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/addressbook.RPCService/ListPeopleByPhoneType',
            addressbook__pb2.Message.SerializeToString,
            addressbook__pb2.Message.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPeopleById(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/addressbook.RPCService/GetPeopleById',
            addressbook__pb2.Message.SerializeToString,
            addressbook__pb2.Message.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
